#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e # fail fast
shopt -s dotglob # include .files when moving things around

BPACK_DIR=`cd $(dirname $0); cd ..; pwd`
BUILD_DIR=$1
CACHE_DIR=$2

# config
HABANERO_URL="https://github.com/pateketrueke/habanero/tarball/master"
APACHE_URL="http://dl.dropbox.com/u/2726997/lib/apache.tar.gz"
PHP_URL="http://dl.dropbox.com/u/2726997/lib/php.tar.gz"

PHPBIN="LD_LIBRARY_PATH=$BUILD_DIR/php/ext $BUILD_DIR/php/bin/php -d date.timezone=UTC"
PHPLIB="$BUILD_DIR/php/lib/php"

ENVVARS="ENV=production"
STACKY="habanero/bin/initialize.php"
SAUCE="$ENVVARS $PHPBIN -f $BUILD_DIR/php/lib/php/$STACKY --"

COMPOSER_BIN="$CACHE_DIR/composer.phar"
COMPOSER_URL="http://getcomposer.org/composer.phar"
COMPOSER_CALL="$PHPBIN $COMPOSER_BIN"

APACHE_VERSION="2.2.22"
PHP_VERSION="5.4.9"


cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi


# backend
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --max-time 60 -sL $APACHE_URL | tar xz

echo "-----> Bundling PHP version $PHP_VERSION"
curl --max-time 60 -sL $PHP_URL | tar xz

# update config files
cp $BPACK_DIR/conf/httpd.conf apache/conf
cp $BPACK_DIR/conf/php.ini php

mkdir -p bin # make php available on bin
echo "/app/php/bin/php \"\$@\"" >> bin/php
chmod +x bin/php

# habanero-sauce
mkdir $CACHE_DIR/git
cd $CACHE_DIR/git

echo "-----> Fetching habanero from GitHub"
curl --max-time 60 -sL $HABANERO_URL | tar xz

cd "$CACHE_DIR/git/$(ls $CACHE_DIR/git)"

mkdir -p $PHPLIB/habanero
cp -R . $PHPLIB/habanero

cd $BUILD_DIR


# composer
GIT_DIR_ORIG=$GIT_DIR
unset GIT_DIR

echo "-----> Fetching composer"
curl --max-time 60 -sL $COMPOSER_URL > $COMPOSER_BIN

cd $PHPLIB/habanero

printf "\r       Main dependencies... "
eval "$COMPOSER_CALL install --prefer-source" > /dev/null 2>&1
echo 'done'

cd $BUILD_DIR

if [ -f www/composer.json ]; then
  cd www
  printf "\r       Application dependencies... "
  eval "$COMPOSER_CALL install --prefer-source" > /dev/null 2>&1
  echo 'done'
fi

export GIT_DIR=$GIT_DIR_ORIG
cd $BUILD_DIR


# console
printf "\r       Prepare environment and binaries... "
echo "cd /app/www && $ENVVARS /app/php/bin/php -f /app/php/lib/php/$STACKY -- \"\$@\"" >> bin/hs
echo 'done'

chmod +x bin/hs

# assets
cd www
printf "\r       Clean and compile assets for production... "
eval "$SAUCE prepare --all" > /dev/null 2>&1
echo 'done'

cd $BUILD_DIR


# www
cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/ext
export PHP_INI_SCAN_DIR=/app/www
echo "Launching Apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh
rm -rf $CACHE_DIR # clean the cache
